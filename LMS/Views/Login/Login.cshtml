 @model LMS.Models.LoginViewModel

@{
    Layout = null;
    ViewBag.Title = "Login";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
        /* Full screen background image */
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            height: 100vh;
            background: url('/Content/images/download.jpg') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Semi-transparent login box */
        .form-container {
            background-color: rgba(255, 255, 255, 0.95); /* Slight transparency */
            padding: 40px 30px;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
            width: 360px;
            max-width: 90%;
            text-align: center;
        }

        h2 {
            margin-bottom: 25px;
            color: #333;
        }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

            .form-group label {
                display: block;
                margin-bottom: 5px;
                color: #555;
                font-weight: bold;
            }

        .form-control {
            width: 100%;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #ccc;
            box-sizing: border-box;
        }

        .btn {
            background-color: #2575fc;
            color: #fff;
            padding: 12px;
            width: 100%;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

            .btn:hover {
                background-color: #6a11cb;
            }

        .alert {
            padding: 10px;
            margin-bottom: 15px;
            border-radius: 6px;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
        }

        .alert-warning {
            background-color: #fff3cd;
            color: #856404;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }

        .captcha-row {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .captcha-input {
            flex: 1;
        }

        .captcha-image {
            height: 40px;
            border: 1px solid #ccc;
            border-radius: 6px;
        }

        .refresh-icon {
            cursor: pointer;
            font-size: 20px;
            color: #555;
        }

        .forgot-password {
            display: block;
            margin: 10px 0 20px;
            text-align: right;
            text-decoration: none;
            color: #2575fc;
        }

            .forgot-password:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Library Management System</h2>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }
        @if (TempData["WarningMessage"] != null)
        {
            <div class="alert alert-warning">@TempData["WarningMessage"]</div>
        }
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success">@TempData["Message"]</div>
        }

        @using (Html.BeginForm("Login", "Login", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="UserID">👤 Username</label>
                @Html.TextBoxFor(m => m.UserID, new { @class = "form-control", placeholder = "UserID" })
                @Html.ValidationMessageFor(m => m.UserID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="Password">🔒 Password</label>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="captcha-row">
                <input type="text" class="form-control captcha-input" name="CaptchaInput" placeholder="Enter CAPTCHA" required />
                <img src="@Url.Action("CaptchaImage", "Login")" id="captchaImage" alt="CAPTCHA" class="captcha-image" />
                <span id="refreshCaptcha" class="refresh-icon">&#x21bb;</span>
            </div>

            <a href="@Url.Action("ForgotPassword", "Login")" class="forgot-password">Reset Password?</a>

            <button type="submit" class="btn">Login</button>
        }

        <script>
            document.getElementById("refreshCaptcha").addEventListener("click", function () {
                document.getElementById("captchaImage").src =
                    '@Url.Action("CaptchaImage", "Login")' + '?' + new Date().getTime();
            });
        </script>
    </div>
</body>
</html>
